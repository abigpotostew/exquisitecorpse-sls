# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: exquisitecorpse
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name


# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: '>=1.28.0 <2.0.0'

plugins:
  - serverless-api-gateway-throttling

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage}
  region: us-west-1
  profile: stewdevadmin
  versionFunctions: false

package:
  artifact: build/package.zip
#  exclude:
#    - ./**
#  include:
#    - ./bin/**
#    - ./static/**

functions:
  api:
    memorySize: 256
    handler: bin/api
    role: apiExecRole
    environment:
      imageBucket: ${self:service}-${self:provider.stage}-${self:provider.region}-images
      galleryBucket: ${self:service}-${self:provider.stage}-${self:provider.region}-gallery
      LOCAL_STATIC_SERVER_DIR: ${self:custom.config.localStaticServerDir}
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY
#      - http:
#          path: /api
#          method: ANY
#      - http:
#          path: /api/{proxy+}
#          method: ANY
#      - http:
#          path: /api/{proxy+}
#          method: POST
#  client:
#    memorySize: 256
#    handler: bin/client
#    role: clientExecRole
#    environment:
#      staticBucket: ${self:service}-${self:provider.stage}-${self:provider.region}-static
#    events:
#      - http:
#          path: /
#          method: get
#      - http:
#          path: /game/{id}
#          method: get
#      - http:
#          path: /static/{proxy+}
#          method: get

custom:
  config: ${file(./config/my.config.yml):${opt:stage}}
  apiGatewayThrottling:
    maxRequestsPerSecond: ${self:custom.config.throttleRateLimit}
    maxConcurrentRequests: ${self:custom.config.throttleBurstLimit}

resources:
  - ${file(serverless/s3.yml)}
  - ${file(serverless/roles.yml)}